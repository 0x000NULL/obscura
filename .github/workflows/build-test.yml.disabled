name: Build and Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      # Make sure rustfmt is available
      - name: Verify rustfmt installation
        run: rustfmt --version
      
      # First build the project to ensure dependencies are available
      - name: Build
        run: cargo build --verbose
      
      # Run formatting check with more verbose output
      - name: Check code formatting
        run: |
          echo "Running cargo fmt check..."
          cargo fmt --all -- --check || {
            echo "Formatting check failed. Running with verbose output to show issues:"
            cargo fmt --all -- --check -v
            exit 1
          }
      
      - name: Lint with clippy
        run: cargo clippy -- -D warnings
      
      - name: Run tests
        run: cargo test --verbose
      
      - name: Run benchmarks
        run: cargo bench --verbose 